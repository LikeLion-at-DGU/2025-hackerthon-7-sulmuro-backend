# ==================================================================
# 공통 설정
# ==================================================================
spring:
  application:
    name: sulmuro-app
  profiles:
    active: local

  servlet:
    multipart:
      max-file-size: 10MB   # 개별 파일의 최대 크기를 10MB로 설정
      max-request-size: 20MB # 한 번의 요청에 포함된 모든 파일의 총 크기를 20MB로 설정

  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        dialect: org.hibernate.dialect.MySQLDialect

# ==================================================================
# Google Cloud AI 설정
# ==================================================================
gemini:
  model-name: "gemini-2.0-flash-lite-001"
  api-key: ${GEMINI_API_KEY}

---
# ==================================================================
# Naver API 설정
# ==================================================================
naver:
  api:
    client-id: ${NAVER_API_CLIENT_ID}    # 여기에 발급받은 Client ID를 넣을 환경 변수 이름
    client-secret: ${NAVER_API_CLIENT_SECRET} # 여기에 발급받은 Client Secret을 넣을 환경 변수 이름


# ==================================================================
# DeppL API 설정
# ==================================================================

deepl:
  baseUrl: ${DEEPL_ID}
  authKey: ${DEEPL_AUTH_KEY}  # 터미널/서버 환경변수로 주입
  formality: default          # default|more|less (ko/ja/zh는 무시됨)

# ==================================================================
# local (개발) 환경 전용 설정
# ==================================================================
spring:
  config:
    activate:
      on-profile: local
  datasource:
    # 한글 깨짐 방지 및 시간대 설정
    url: "jdbc:mysql://localhost:3306/sulmuro?serverTimezone=Asia/Seoul&useUnicode=true&characterEncoding=UTF-8"
    username: root
    password: ${DB_LOCAL_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: validate
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 20MB

server:
  port: 8080

app:
  i18n:
    cacheTtlMinutes: 60     # 캐시 TTL
    saveToDb: false         # DB에 저장까지 하고 싶으면 true (옵션)

  upload:
    root: ${user.home}/uploads
    public-base-url: http://localhost:8080/uploads




---
# ==================================================================
# prod (배포) 환경 전용 설정
# ==================================================================
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        show_sql: false
        format_sql: false
app:
  upload:
    root: /home/ubuntu/uploads
    public-base-url: https://movingun.store/uploads

